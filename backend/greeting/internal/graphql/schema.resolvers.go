package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"
	pb "greeting/internal/grpc/proto"
)

// Greet is the resolver for the greet field.
func (r *mutationResolver) Greet(ctx context.Context, input UserInput) (*UserResponse, error) {
	in := &pb.Req{
		Firstname: input.Firstname,
		Lastname:  input.Lastname,
	}
	res, err := r.GreetServiceClient.Greet(ctx, in)
	if err != nil {
		return nil, fmt.Errorf("error in grpc: %s", err)
	}
	return &UserResponse{Result: res.Greeting}, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
